# Automated build file for the OpenZen repository
# -----
# Custom Docker image which brings C++ compiler and boost libraries
image:
  name: thauth/buildbox-multi-platform:10
  username: $DOCKER_HUB_USERNAME
  password: $DOCKER_HUB_PASSWORD
  email: $DOCKER_HUB_EMAIL
pipelines:
  default:
    - parallel:
      - step:
          name: Linux x64 Build Gcc
          script:
            - git submodule update --init
            - mkdir ../linux_x64_build && cd ../linux_x64_build
            # disable most of optional components for now
            - cmake ../build
            - make
            - ./OpenZenTests
      - step:
          name: Linux x64 Build Gcc Static
          script:
            - git submodule update --init
            - mkdir ../linux_x64_build && cd ../linux_x64_build
            # disable most of optional components for now
            - cmake -DZEN_USE_STATIC_LIBS=ON ../build
            - make
            - ./OpenZenTests            
      - step:
          name: Linux x64 Build Clang
          script:
            - git submodule update --init
            - mkdir ../linux_x64_build && cd ../linux_x64_build
            # disable most of optional components for now
            - cmake -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CC_COMPILER=clang ../build
            - make
            - ./OpenZenTests
      - step:
          name: Linux x64 Build Gcc ZeroMQ support
          script:
            - git submodule update --init
            - mkdir ../linux_x64_build && cd ../linux_x64_build
            # disable most of optional components for now
            - cmake -DZEN_NETWORK=ON ../build
            - make
            - ./OpenZenTests
      - step:
          name: Linux x64 Build no Bluetooth
          script:
            - git submodule update --init
            - mkdir ../linux_x64_build_nobt && cd ../linux_x64_build_nobt
            # disable most of optional components for now
            - cmake -DZEN_BLUETOOTH=OFF ../build
            - make
            - ./OpenZenTests
      - step:
          name: Linux x64 CMake Package compile and Standalone test
          script:
            - git submodule update --init
            - mkdir ../linux_x64_build_release && cd ../linux_x64_build_release
            - cmake -DCMAKE_INSTALL_PREFIX=../openzen_install ../build
            - make install
            - mkdir ../linux_x64_build_standalone && cd ../linux_x64_build_standalone
            - cmake -DCMAKE_INSTALL_PREFIX=../openzen_install ../build/standalone_example
            - make
            - ./OpenZenStandaloneExample
